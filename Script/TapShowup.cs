using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class TapShowup : MonoBehaviour
{
    public GameObject uiCanvas; // ?A?N?e?B?u??????UI Canvas
    public Collider colliderToTap; // ?^?b?v?????R???C?_?[
    public string OpenPositionName;

    private bool canvasActive = false; // Canvas???A?N?e?B?u????????????

    /*
     * ?R???C?_?[???A?N?e?B?u???o??????????????????????
     */
   
    void Update()
    {
        if (CameraManager.Instance != null && OpenPositionName == CameraManager.Instance.CurrentPositionName)
        {
            colliderToTap.gameObject.SetActive(true);
        }
        else if (CameraManager1.Instance != null && OpenPositionName == CameraManager1.Instance.CurrentPositionName)
        {
            colliderToTap.gameObject.SetActive(true);
        }
        else if (CameraManager2.Instance != null && OpenPositionName == CameraManager2.Instance.CurrentPositionName)
        {
            colliderToTap.gameObject.SetActive(true);
        }
        else if (CameraManager3.Instance != null && OpenPositionName == CameraManager3.Instance.CurrentPositionName)
        {
            colliderToTap.gameObject.SetActive(true);
        }
        else if (CameraManager8.Instance != null && OpenPositionName == CameraManager8.Instance.CurrentPositionName)
        {
            colliderToTap.gameObject.SetActive(true);
        }
        else
        {
            colliderToTap.gameObject.SetActive(false);
        }


        if (Input.GetMouseButtonDown(0)) // ???N???b?N??????????
        {
            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition); // ?J?????????}?E?X???W?????C????????
            RaycastHit hit;
            if (Physics.Raycast(ray, out hit)) // ???C????????????????????
            {
                if (hit.collider == colliderToTap) // ?w???????R???C?_?[???????V?????????????R???C?_?[???^?b?v????????
                {
                    canvasActive = !canvasActive; // Canvas???A?N?e?B?u?????????]??????
                    uiCanvas.SetActive(canvasActive); // Canvas???A?N?e?B?u??????????????UI???A?N?e?B?u???????????A?N?e?B?u??????
                }
            }
        }

    }


    public void DeactivateCanvas()
    {
        uiCanvas.SetActive(false);
        canvasActive = false;
    }

}
